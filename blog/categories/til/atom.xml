<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: til | Improving Me]]></title>
  <link href="http://bforrest.github.com/blog/categories/til/atom.xml" rel="self"/>
  <link href="http://bforrest.github.com/"/>
  <updated>2014-08-08T21:36:40-05:00</updated>
  <id>http://bforrest.github.com/</id>
  <author>
    <name><![CDATA[Barry Forrest]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TIL => ReportViewer Control, Less is More]]></title>
    <link href="http://bforrest.github.com/blog/2013/01/07/til-equals-%3E-reportviewer-control/"/>
    <updated>2013-01-07T21:32:00-06:00</updated>
    <id>http://bforrest.github.com/blog/2013/01/07/til-equals->-reportviewer-control</id>
    <content type="html"><![CDATA[<h2>TIL: ReportViewer WebControl => Less is More</h2>

<p>Stop me if you&rsquo;ve heard this one: &ldquo;Their IT staff is going to take care of that development &hellip;&rdquo; And so it was recently on a project I am developing.</p>

<p>A separate development activity was spun up to create the required SSRS reports which were to be hosted on a Report Server. Well the Report Server uses Active Directory accounts for authentication and authorization. The portal that I&rsquo;m building essentially uses the ASP.net Membership Provider and its services.</p>

<p>Suddenly, I was confronted with a situation where I needed to provide access to reports hosted on a report server from my MVC application and handle security for the reports too. Enter the ReportViewer control, hosted in an ASP.net WebForm ASPX page and running remote mode SSRS reports.</p>

<p>I scrambled to learn how to host the ReportViewer Control and have it render reports in my application. I didn&rsquo;t search long enough to find a fully baked, working sample, but was able to get a report to render based on an initial set of parameters. I was happy and smug as a bug in a rug. But then I find out that this report should page and sort and link through to other reports. Now I&rsquo;m a sad panda.</p>

<p>For my first attempt to host the ReportViewer control, I tried to juggle the parameters and update the report URL on each request. As it turns out, I was doing that wrong and completely broke the drill-through reports, paging and searching. After about half a day of combing the Internet for the secrets to keeping the remote reports fully functioning and not finding much helpful, I started to experiment.</p>

<p>Here is what I ended up with in the WebForm code-behind:</p>

<p><div><script src='https://gist.github.com/4467831.js'></script>
<noscript><pre><code>protected override void OnInit(EventArgs e)
{
    base.OnInit(e);
    ReportViewer1.ProcessingMode = ProcessingMode.Remote;
    ReportViewer1.ServerReport.ReportServerUrl = new Uri(&quot;http://Report_Server/Report_Root&quot;);
    ReportViewer1.ServerReport.DisplayName = &quot;Report Title&quot;;
}

protected void Page_Load(object sender, EventArgs e)
{
    if (IsPostBack) return;
    
    var inbound_query_param = Request.RequestContext.RouteData.Values[&quot;QueryString_Parameter&quot;].ToString();
    var report_param = new ReportParameter(&quot;SSRS_Report_Parameter&quot;, inbound_query_param);
    var portalUser = ((UserIdentity)User.Identity);

    if (portalUser.Account != account)
    {
        // Log invalid access attempt
    }

    ReportViewer1.ServerReport.ReportPath = &quot;/Report_Server_Report_Collection/Recipient Summary Page&quot;;
    ReportViewer1.ServerReport.SetParameters(new[] { report_param });
    ReportViewer1.ServerReport.Refresh();
}</code></pre></noscript></div>
</p>

<p> wound up doing it setting the report server and report title in the OnInit method of the web-page. I also bound the selection controls to the available options for the current user and wired up the change event handlers. PostBack events that aren&rsquo;t triggered by the selection controls that I added to the web form are ignored by the code behind and the httpHandler for the report viewer control handles the interaction with the SSRS server.</p>
]]></content>
  </entry>
  
</feed>
